<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vport.mapper.courseAndTraining.base.TrainingClassMapper" >
  <resultMap id="BaseResultMap" type="cn.vport.domain.courseAndTraining.base.TrainingClass" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="traing_time" property="traingTime" jdbcType="VARCHAR" />
    <result column="training_frequent" property="trainingFrequent" jdbcType="VARCHAR" />
    <result column="dead_line" property="deadLine" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="course" property="course" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, start_time, traing_time, training_frequent, dead_line, status, course
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.vport.domain.courseAndTraining.base.TrainingClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from training_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.vport.domain.courseAndTraining.base.TrainingClassExample" >
    delete from training_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.vport.domain.courseAndTraining.base.TrainingClass" >
    insert into training_class (id, start_time, traing_time, 
      training_frequent, dead_line, status, 
      course)
    values (#{id,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{traingTime,jdbcType=VARCHAR}, 
      #{trainingFrequent,jdbcType=VARCHAR}, #{deadLine,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{course,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.vport.domain.courseAndTraining.base.TrainingClass" >
    insert into training_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="traingTime != null" >
        traing_time,
      </if>
      <if test="trainingFrequent != null" >
        training_frequent,
      </if>
      <if test="deadLine != null" >
        dead_line,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="course != null" >
        course,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="traingTime != null" >
        #{traingTime,jdbcType=VARCHAR},
      </if>
      <if test="trainingFrequent != null" >
        #{trainingFrequent,jdbcType=VARCHAR},
      </if>
      <if test="deadLine != null" >
        #{deadLine,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="course != null" >
        #{course,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.vport.domain.courseAndTraining.base.TrainingClassExample" resultType="java.lang.Integer" >
    select count(*) from training_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update training_class
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.traingTime != null" >
        traing_time = #{record.traingTime,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingFrequent != null" >
        training_frequent = #{record.trainingFrequent,jdbcType=VARCHAR},
      </if>
      <if test="record.deadLine != null" >
        dead_line = #{record.deadLine,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.course != null" >
        course = #{record.course,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update training_class
    set id = #{record.id,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      traing_time = #{record.traingTime,jdbcType=VARCHAR},
      training_frequent = #{record.trainingFrequent,jdbcType=VARCHAR},
      dead_line = #{record.deadLine,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      course = #{record.course,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>